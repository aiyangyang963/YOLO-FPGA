// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _doImgProc_HH_
#define _doImgProc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "doImgProc_lineBuff_val_0.h"
#include "doImgProc_CRTL_BUS_s_axi.h"
#include "doImgProc_KERNEL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32,
         unsigned int C_S_AXI_KERNEL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_KERNEL_BUS_DATA_WIDTH = 32>
struct doImgProc : public sc_module {
    // Port declarations 55
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<8> > inStream_TDATA;
    sc_in< sc_logic > inStream_TVALID;
    sc_out< sc_logic > inStream_TREADY;
    sc_in< sc_lv<1> > inStream_TKEEP;
    sc_in< sc_lv<1> > inStream_TSTRB;
    sc_in< sc_lv<2> > inStream_TUSER;
    sc_in< sc_lv<1> > inStream_TLAST;
    sc_in< sc_lv<5> > inStream_TID;
    sc_in< sc_lv<6> > inStream_TDEST;
    sc_out< sc_lv<8> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<1> > outStream_TKEEP;
    sc_out< sc_lv<1> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_in< sc_logic > s_axi_KERNEL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_KERNEL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_ADDR_WIDTH> > s_axi_KERNEL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_KERNEL_BUS_WVALID;
    sc_out< sc_logic > s_axi_KERNEL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_DATA_WIDTH> > s_axi_KERNEL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_DATA_WIDTH/8> > s_axi_KERNEL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_KERNEL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_KERNEL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_ADDR_WIDTH> > s_axi_KERNEL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_KERNEL_BUS_RVALID;
    sc_in< sc_logic > s_axi_KERNEL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_KERNEL_BUS_DATA_WIDTH> > s_axi_KERNEL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_KERNEL_BUS_RRESP;
    sc_out< sc_logic > s_axi_KERNEL_BUS_BVALID;
    sc_in< sc_logic > s_axi_KERNEL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_KERNEL_BUS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    doImgProc(sc_module_name name);
    SC_HAS_PROCESS(doImgProc);

    ~doImgProc();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    doImgProc_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* doImgProc_CRTL_BUS_s_axi_U;
    doImgProc_KERNEL_BUS_s_axi<C_S_AXI_KERNEL_BUS_ADDR_WIDTH,C_S_AXI_KERNEL_BUS_DATA_WIDTH>* doImgProc_KERNEL_BUS_s_axi_U;
    doImgProc_lineBuff_val_0* lineBuff_val_0_U;
    doImgProc_lineBuff_val_0* lineBuff_val_1_U;
    doImgProc_lineBuff_val_0* lineBuff_val_2_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > inStream_V_data_V_0_data_out;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_out;
    sc_signal< sc_lv<8> > inStream_V_data_V_0_payload_A;
    sc_signal< sc_lv<8> > inStream_V_data_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_data_V_0_sel;
    sc_signal< sc_logic > inStream_V_data_V_0_load_A;
    sc_signal< sc_logic > inStream_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_data_V_0_state;
    sc_signal< sc_logic > inStream_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > inStream_V_keep_V_0_data_out;
    sc_signal< sc_logic > inStream_V_keep_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_keep_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_keep_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_keep_V_0_ack_out;
    sc_signal< sc_lv<1> > inStream_V_keep_V_0_payload_A;
    sc_signal< sc_lv<1> > inStream_V_keep_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_keep_V_0_sel;
    sc_signal< sc_logic > inStream_V_keep_V_0_load_A;
    sc_signal< sc_logic > inStream_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_keep_V_0_state;
    sc_signal< sc_logic > inStream_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > inStream_V_strb_V_0_data_out;
    sc_signal< sc_logic > inStream_V_strb_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_strb_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_strb_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_strb_V_0_ack_out;
    sc_signal< sc_lv<1> > inStream_V_strb_V_0_payload_A;
    sc_signal< sc_lv<1> > inStream_V_strb_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_strb_V_0_sel;
    sc_signal< sc_logic > inStream_V_strb_V_0_load_A;
    sc_signal< sc_logic > inStream_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_strb_V_0_state;
    sc_signal< sc_logic > inStream_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_data_out;
    sc_signal< sc_logic > inStream_V_user_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_user_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_user_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_user_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_user_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_user_V_0_sel;
    sc_signal< sc_logic > inStream_V_user_V_0_load_A;
    sc_signal< sc_logic > inStream_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_state;
    sc_signal< sc_logic > inStream_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > inStream_V_id_V_0_data_out;
    sc_signal< sc_logic > inStream_V_id_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_id_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_id_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > inStream_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > inStream_V_id_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_id_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_id_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_id_V_0_sel;
    sc_signal< sc_logic > inStream_V_id_V_0_load_A;
    sc_signal< sc_logic > inStream_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_id_V_0_state;
    sc_signal< sc_logic > inStream_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > inStream_V_dest_V_0_data_out;
    sc_signal< sc_logic > inStream_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_dest_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_dest_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > inStream_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > inStream_V_dest_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_dest_V_0_sel;
    sc_signal< sc_logic > inStream_V_dest_V_0_load_A;
    sc_signal< sc_logic > inStream_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_dest_V_0_state;
    sc_signal< sc_logic > inStream_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_data_in;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_data_out;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_data_V_1_sel;
    sc_signal< sc_logic > outStream_V_data_V_1_load_A;
    sc_signal< sc_logic > outStream_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_data_V_1_state;
    sc_signal< sc_logic > outStream_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_data_in;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_data_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_A;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_keep_V_1_state;
    sc_signal< sc_logic > outStream_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_data_in;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_data_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_A;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_strb_V_1_state;
    sc_signal< sc_logic > outStream_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_in;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_out;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_user_V_1_sel;
    sc_signal< sc_logic > outStream_V_user_V_1_load_A;
    sc_signal< sc_logic > outStream_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_state;
    sc_signal< sc_logic > outStream_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_out;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_last_V_1_sel;
    sc_signal< sc_logic > outStream_V_last_V_1_load_A;
    sc_signal< sc_logic > outStream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_last_V_1_state;
    sc_signal< sc_logic > outStream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_in;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_out;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_id_V_1_sel;
    sc_signal< sc_logic > outStream_V_id_V_1_load_A;
    sc_signal< sc_logic > outStream_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_id_V_1_state;
    sc_signal< sc_logic > outStream_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_in;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_A;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_dest_V_1_state;
    sc_signal< sc_logic > outStream_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > kernel_address0;
    sc_signal< sc_logic > kernel_ce0;
    sc_signal< sc_lv<8> > kernel_q0;
    sc_signal< sc_lv<32> > operation;
    sc_signal< sc_logic > inStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond1_reg_1331;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<1> > tmp_12_reg_1350;
    sc_signal< sc_lv<1> > tmp_12_reg_1350_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > exitcond_fu_1252_p2;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<5> > dataOutSideChannel_i_reg_411;
    sc_signal< sc_lv<2> > dataOutSideChannel_u_reg_424;
    sc_signal< sc_lv<1> > dataOutSideChannel_s_reg_437;
    sc_signal< sc_lv<1> > dataOutSideChannel_k_reg_450;
    sc_signal< sc_lv<6> > dataOutSideChannel_d_reg_463;
    sc_signal< sc_lv<32> > col_assign_reg_476;
    sc_signal< sc_lv<32> > idxRow_reg_488;
    sc_signal< sc_lv<32> > pixConvolved_reg_500;
    sc_signal< sc_lv<17> > countWait_reg_512;
    sc_signal< sc_lv<8> > reg_535;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< bool > ap_block_state7_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage5_iter1;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state9_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< sc_lv<8> > reg_539;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage4_iter1;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state8_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage8;
    sc_signal< bool > ap_block_state10_pp0_stage8_iter0;
    sc_signal< bool > ap_block_pp0_stage8_11001;
    sc_signal< sc_lv<8> > lineBuff_val_0_q1;
    sc_signal< sc_lv<8> > reg_543;
    sc_signal< sc_lv<1> > sel_tmp2_fu_547_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_1316;
    sc_signal< sc_lv<1> > sel_tmp5_fu_553_p2;
    sc_signal< sc_lv<1> > sel_tmp5_reg_1321;
    sc_signal< sc_lv<1> > sel_tmp8_fu_559_p2;
    sc_signal< sc_lv<1> > sel_tmp8_reg_1326;
    sc_signal< sc_lv<1> > exitcond1_fu_565_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond1_reg_1331_pp0_iter1_reg;
    sc_signal< sc_lv<64> > tmp_s_fu_571_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_1335;
    sc_signal< sc_lv<8> > lineBuff_val_1_addr_reg_1340;
    sc_signal< sc_lv<8> > lineBuff_val_2_addr_reg_1345;
    sc_signal< sc_lv<1> > tmp_12_fu_577_p2;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_1354;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_1354_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_1360;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_1360_pp0_iter1_reg;
    sc_signal< sc_lv<2> > tmp_user_V_reg_1366;
    sc_signal< sc_lv<2> > tmp_user_V_reg_1366_pp0_iter1_reg;
    sc_signal< sc_lv<5> > tmp_id_V_reg_1372;
    sc_signal< sc_lv<5> > tmp_id_V_reg_1372_pp0_iter1_reg;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_1378;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_1378_pp0_iter1_reg;
    sc_signal< sc_lv<32> > pixConvolved_3_fu_615_p2;
    sc_signal< sc_lv<32> > pixConvolved_3_reg_1389;
    sc_signal< sc_lv<16> > window_val_0_0_fu_636_p2;
    sc_signal< sc_lv<16> > window_val_0_0_reg_1422;
    sc_signal< sc_lv<8> > lineBuff_val_1_q0;
    sc_signal< sc_lv<8> > lineBuff_val_1_load_1_reg_1432;
    sc_signal< sc_lv<8> > lineBuff_val_1_q1;
    sc_signal< sc_lv<8> > lineBuff_val_1_load_2_reg_1437;
    sc_signal< sc_lv<8> > lineBuff_val_2_q0;
    sc_signal< sc_lv<8> > lineBuff_val_2_load_1_reg_1447;
    sc_signal< sc_lv<8> > lineBuff_val_2_q1;
    sc_signal< sc_lv<8> > lineBuff_val_2_load_2_reg_1452;
    sc_signal< sc_lv<8> > tmp_14_fu_655_p1;
    sc_signal< sc_lv<8> > tmp_14_reg_1462;
    sc_signal< sc_lv<8> > lineBuff_val_1_load_3_reg_1470;
    sc_signal< sc_lv<8> > lineBuff_val_2_load_3_reg_1475;
    sc_signal< sc_lv<1> > or_cond_fu_705_p2;
    sc_signal< sc_lv<1> > or_cond_reg_1480;
    sc_signal< sc_lv<16> > tmp4_fu_711_p2;
    sc_signal< sc_lv<16> > tmp4_reg_1486;
    sc_signal< sc_lv<8> > tmp_15_fu_716_p1;
    sc_signal< sc_lv<8> > tmp_15_reg_1491;
    sc_signal< sc_lv<1> > sel_tmp3_fu_727_p2;
    sc_signal< sc_lv<1> > sel_tmp3_reg_1499;
    sc_signal< sc_lv<32> > sel_tmp4_fu_732_p3;
    sc_signal< sc_lv<32> > sel_tmp4_reg_1504;
    sc_signal< sc_lv<16> > window_val_0_2_fu_747_p2;
    sc_signal< sc_lv<16> > window_val_0_2_reg_1509;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_1_fu_773_p3;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_1_reg_1514;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_1_fu_797_p3;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_1_reg_1520;
    sc_signal< sc_lv<16> > window_val_1_0_fu_812_p2;
    sc_signal< sc_lv<16> > window_val_1_0_reg_1526;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_2_fu_827_p3;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_2_reg_1531;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_2_fu_839_p3;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_2_reg_1537;
    sc_signal< sc_lv<16> > window_val_1_1_fu_853_p2;
    sc_signal< sc_lv<16> > window_val_1_1_reg_1543;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_3_fu_868_p3;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_3_reg_1548;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_3_fu_880_p3;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_3_reg_1554;
    sc_signal< sc_lv<16> > window_val_1_2_fu_894_p2;
    sc_signal< sc_lv<16> > window_val_1_2_reg_1560;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_4_fu_909_p3;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_4_reg_1565;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_4_fu_921_p3;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_4_reg_1571;
    sc_signal< sc_lv<1> > tmp_11_fu_928_p2;
    sc_signal< sc_lv<1> > tmp_11_reg_1577;
    sc_signal< sc_lv<32> > idxCol_1_fu_940_p3;
    sc_signal< sc_lv<32> > idxCol_1_reg_1583;
    sc_signal< sc_lv<17> > phitmp_fu_948_p2;
    sc_signal< sc_lv<17> > phitmp_reg_1588;
    sc_signal< sc_lv<16> > window_val_2_0_fu_961_p2;
    sc_signal< sc_lv<16> > window_val_2_0_reg_1593;
    sc_signal< sc_lv<8> > kernel_load_8_reg_1598;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_5_fu_976_p3;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_5_reg_1603;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_5_fu_988_p3;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_5_reg_1609;
    sc_signal< sc_lv<16> > tmp1_fu_1008_p2;
    sc_signal< sc_lv<16> > tmp1_reg_1615;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_6_fu_1022_p3;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_6_reg_1620;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_6_fu_1034_p3;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_6_reg_1626;
    sc_signal< sc_lv<1> > sel_tmp6_fu_1041_p2;
    sc_signal< sc_lv<1> > sel_tmp6_reg_1632;
    sc_signal< sc_lv<1> > sel_tmp9_fu_1051_p2;
    sc_signal< sc_lv<1> > sel_tmp9_reg_1637;
    sc_signal< sc_lv<32> > pixConvolved_2_fu_1062_p3;
    sc_signal< sc_lv<32> > pixConvolved_2_reg_1642;
    sc_signal< sc_lv<16> > tmp3_fu_1085_p2;
    sc_signal< sc_lv<16> > tmp3_reg_1647;
    sc_signal< sc_lv<16> > tmp6_fu_1095_p2;
    sc_signal< sc_lv<16> > tmp6_reg_1652;
    sc_signal< sc_lv<8> > sel_tmp10_fu_1135_p3;
    sc_signal< sc_lv<8> > sel_tmp10_reg_1657;
    sc_signal< sc_lv<1> > tmp_4_reg_1662;
    sc_signal< sc_lv<14> > tmp_6_reg_1667;
    sc_signal< sc_lv<13> > tmp_7_reg_1672;
    sc_signal< sc_lv<32> > idxRow_1_fu_1195_p3;
    sc_signal< sc_lv<32> > idxRow_1_reg_1677;
    sc_signal< sc_lv<8> > dataOutSideChannel_d_1_fu_1245_p3;
    sc_signal< sc_lv<8> > countWait_2_fu_1258_p2;
    sc_signal< sc_lv<8> > countWait_2_reg_1690;
    sc_signal< bool > ap_block_state18;
    sc_signal< bool > ap_block_state18_io;
    sc_signal< sc_lv<1> > tmp_last_V_fu_1264_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage8_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< sc_lv<8> > lineBuff_val_0_address0;
    sc_signal< sc_logic > lineBuff_val_0_ce0;
    sc_signal< sc_logic > lineBuff_val_0_we0;
    sc_signal< sc_lv<8> > lineBuff_val_0_q0;
    sc_signal< sc_lv<8> > lineBuff_val_0_address1;
    sc_signal< sc_logic > lineBuff_val_0_ce1;
    sc_signal< sc_lv<8> > lineBuff_val_1_address0;
    sc_signal< sc_logic > lineBuff_val_1_ce0;
    sc_signal< sc_logic > lineBuff_val_1_we0;
    sc_signal< sc_lv<8> > lineBuff_val_1_address1;
    sc_signal< sc_logic > lineBuff_val_1_ce1;
    sc_signal< sc_lv<8> > lineBuff_val_2_address0;
    sc_signal< sc_logic > lineBuff_val_2_ce0;
    sc_signal< sc_logic > lineBuff_val_2_we0;
    sc_signal< sc_lv<8> > lineBuff_val_2_address1;
    sc_signal< sc_logic > lineBuff_val_2_ce1;
    sc_signal< sc_lv<32> > ap_phi_mux_col_assign_phi_fu_480_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_idxRow_phi_fu_492_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_pixConvolved_phi_fu_504_p4;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<17> > ap_phi_mux_countWait_phi_fu_516_p4;
    sc_signal< sc_lv<8> > countWait_1_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > tmp_5_fu_608_p1;
    sc_signal< sc_lv<64> > tmp_27_0_1_fu_621_p1;
    sc_signal< sc_lv<64> > tmp_27_0_2_fu_648_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage4_01001;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< bool > ap_block_pp0_stage8;
    sc_signal< sc_lv<8> > window_val_0_0_fu_636_p0;
    sc_signal< sc_lv<8> > window_val_0_0_fu_636_p1;
    sc_signal< sc_lv<32> > col_assign_1_0_2_fu_642_p2;
    sc_signal< sc_lv<8> > window_val_0_1_fu_667_p0;
    sc_signal< sc_lv<8> > window_val_0_1_fu_667_p1;
    sc_signal< sc_lv<31> > tmp_1_fu_673_p4;
    sc_signal< sc_lv<31> > tmp_2_fu_689_p4;
    sc_signal< sc_lv<1> > icmp_fu_683_p2;
    sc_signal< sc_lv<1> > icmp4_fu_699_p2;
    sc_signal< sc_lv<16> > window_val_0_1_fu_667_p2;
    sc_signal< sc_lv<32> > sel_tmp1_fu_720_p3;
    sc_signal< sc_lv<8> > window_val_0_2_fu_747_p0;
    sc_signal< sc_lv<8> > window_val_0_2_fu_747_p1;
    sc_signal< sc_lv<1> > tmp_5_0_1_i_fu_753_p2;
    sc_signal< sc_lv<8> > tmp_16_fu_763_p1;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_fu_757_p3;
    sc_signal< sc_lv<1> > tmp_5_0_2_i_fu_767_p2;
    sc_signal< sc_lv<1> > tmp_11_0_1_i_fu_781_p2;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_fu_785_p3;
    sc_signal< sc_lv<1> > tmp_11_0_2_i_fu_791_p2;
    sc_signal< sc_lv<8> > window_val_1_0_fu_812_p0;
    sc_signal< sc_lv<8> > window_val_1_0_fu_812_p1;
    sc_signal< sc_lv<8> > tmp_17_fu_818_p1;
    sc_signal< sc_lv<1> > tmp_5_1_i_fu_822_p2;
    sc_signal< sc_lv<1> > tmp_11_1_i_fu_834_p2;
    sc_signal< sc_lv<8> > window_val_1_1_fu_853_p0;
    sc_signal< sc_lv<8> > window_val_1_1_fu_853_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_859_p1;
    sc_signal< sc_lv<1> > tmp_5_1_1_i_fu_863_p2;
    sc_signal< sc_lv<1> > tmp_11_1_1_i_fu_875_p2;
    sc_signal< sc_lv<8> > window_val_1_2_fu_894_p0;
    sc_signal< sc_lv<8> > window_val_1_2_fu_894_p1;
    sc_signal< sc_lv<8> > tmp_19_fu_900_p1;
    sc_signal< sc_lv<1> > tmp_5_1_2_i_fu_904_p2;
    sc_signal< sc_lv<1> > tmp_11_1_2_i_fu_916_p2;
    sc_signal< sc_lv<32> > idxCol_fu_934_p2;
    sc_signal< sc_lv<8> > window_val_2_0_fu_961_p0;
    sc_signal< sc_lv<8> > window_val_2_0_fu_961_p1;
    sc_signal< sc_lv<8> > tmp_20_fu_967_p1;
    sc_signal< sc_lv<1> > tmp_5_2_i_fu_971_p2;
    sc_signal< sc_lv<1> > tmp_11_2_i_fu_983_p2;
    sc_signal< sc_lv<8> > window_val_2_1_fu_1002_p0;
    sc_signal< sc_lv<8> > window_val_2_1_fu_1002_p1;
    sc_signal< sc_lv<16> > window_val_2_1_fu_1002_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_1013_p1;
    sc_signal< sc_lv<1> > tmp_5_2_1_i_fu_1017_p2;
    sc_signal< sc_lv<1> > tmp_11_2_1_i_fu_1029_p2;
    sc_signal< sc_lv<32> > sel_tmp7_fu_1045_p3;
    sc_signal< sc_lv<32> > pixConvolved_1_fu_1055_p3;
    sc_signal< sc_lv<8> > window_val_2_2_fu_1075_p0;
    sc_signal< sc_lv<8> > window_val_2_2_fu_1075_p1;
    sc_signal< sc_lv<16> > tmp2_fu_1081_p2;
    sc_signal< sc_lv<16> > window_val_2_2_fu_1075_p2;
    sc_signal< sc_lv<16> > tmp5_fu_1090_p2;
    sc_signal< sc_lv<8> > tmp_22_fu_1100_p1;
    sc_signal< sc_lv<1> > tmp_5_2_2_i_fu_1104_p2;
    sc_signal< sc_lv<1> > tmp_11_2_2_i_fu_1116_p2;
    sc_signal< sc_lv<8> > valInWindow_0_maxVal_7_fu_1121_p3;
    sc_signal< sc_lv<8> > valInWindow_0_minVal_7_fu_1109_p3;
    sc_signal< sc_lv<8> > sel_tmp_fu_1128_p3;
    sc_signal< sc_lv<16> > tmp7_fu_1142_p2;
    sc_signal< sc_lv<16> > valOutput_fu_1146_p2;
    sc_signal< sc_lv<17> > tmp_20_tr_fu_1151_p1;
    sc_signal< sc_lv<17> > p_neg_fu_1163_p2;
    sc_signal< sc_lv<32> > idxRow_2_fu_1189_p2;
    sc_signal< sc_lv<15> > tmp_5_cast_fu_1202_p1;
    sc_signal< sc_lv<14> > tmp_8_fu_1205_p1;
    sc_signal< sc_lv<15> > tmp_9_fu_1208_p2;
    sc_signal< sc_lv<15> > tmp_10_cast_fu_1214_p1;
    sc_signal< sc_lv<15> > valOutput_1_fu_1218_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_1229_p3;
    sc_signal< sc_lv<8> > tmp_10_fu_1225_p1;
    sc_signal< sc_lv<8> > p_s_fu_1237_p3;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<16> > window_val_0_0_fu_636_p10;
    sc_signal< sc_lv<16> > window_val_0_1_fu_667_p10;
    sc_signal< sc_lv<16> > window_val_0_2_fu_747_p10;
    sc_signal< sc_lv<16> > window_val_1_0_fu_812_p10;
    sc_signal< sc_lv<16> > window_val_1_1_fu_853_p10;
    sc_signal< sc_lv<16> > window_val_1_2_fu_894_p10;
    sc_signal< sc_lv<16> > window_val_2_0_fu_961_p10;
    sc_signal< sc_lv<16> > window_val_2_1_fu_1002_p10;
    sc_signal< sc_lv<16> > window_val_2_2_fu_1075_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_pp0_stage0;
    static const sc_lv<13> ap_ST_fsm_pp0_stage1;
    static const sc_lv<13> ap_ST_fsm_pp0_stage2;
    static const sc_lv<13> ap_ST_fsm_pp0_stage3;
    static const sc_lv<13> ap_ST_fsm_pp0_stage4;
    static const sc_lv<13> ap_ST_fsm_pp0_stage5;
    static const sc_lv<13> ap_ST_fsm_pp0_stage6;
    static const sc_lv<13> ap_ST_fsm_pp0_stage7;
    static const sc_lv<13> ap_ST_fsm_pp0_stage8;
    static const sc_lv<13> ap_ST_fsm_state17;
    static const sc_lv<13> ap_ST_fsm_state18;
    static const sc_lv<13> ap_ST_fsm_state19;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<17> ap_const_lv17_12C01;
    static const sc_lv<17> ap_const_lv17_F1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_EF;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_EF;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_pp0_stage8();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_01001();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_pp0_stage8();
    void thread_ap_block_pp0_stage8_11001();
    void thread_ap_block_pp0_stage8_subdone();
    void thread_ap_block_state10_pp0_stage8_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state12_pp0_stage1_iter1();
    void thread_ap_block_state13_pp0_stage2_iter1();
    void thread_ap_block_state14_pp0_stage3_iter1();
    void thread_ap_block_state15_io();
    void thread_ap_block_state15_pp0_stage4_iter1();
    void thread_ap_block_state16_io();
    void thread_ap_block_state16_pp0_stage5_iter1();
    void thread_ap_block_state18();
    void thread_ap_block_state18_io();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_pp0_stage5_iter0();
    void thread_ap_block_state8_pp0_stage6_iter0();
    void thread_ap_block_state9_pp0_stage7_iter0();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_col_assign_phi_fu_480_p4();
    void thread_ap_phi_mux_countWait_phi_fu_516_p4();
    void thread_ap_phi_mux_idxRow_phi_fu_492_p4();
    void thread_ap_phi_mux_pixConvolved_phi_fu_504_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_col_assign_1_0_2_fu_642_p2();
    void thread_countWait_2_fu_1258_p2();
    void thread_dataOutSideChannel_d_1_fu_1245_p3();
    void thread_exitcond1_fu_565_p2();
    void thread_exitcond_fu_1252_p2();
    void thread_icmp4_fu_699_p2();
    void thread_icmp_fu_683_p2();
    void thread_idxCol_1_fu_940_p3();
    void thread_idxCol_fu_934_p2();
    void thread_idxRow_1_fu_1195_p3();
    void thread_idxRow_2_fu_1189_p2();
    void thread_inStream_TDATA_blk_n();
    void thread_inStream_TREADY();
    void thread_inStream_V_data_V_0_ack_in();
    void thread_inStream_V_data_V_0_ack_out();
    void thread_inStream_V_data_V_0_data_out();
    void thread_inStream_V_data_V_0_load_A();
    void thread_inStream_V_data_V_0_load_B();
    void thread_inStream_V_data_V_0_sel();
    void thread_inStream_V_data_V_0_state_cmp_full();
    void thread_inStream_V_data_V_0_vld_in();
    void thread_inStream_V_data_V_0_vld_out();
    void thread_inStream_V_dest_V_0_ack_in();
    void thread_inStream_V_dest_V_0_ack_out();
    void thread_inStream_V_dest_V_0_data_out();
    void thread_inStream_V_dest_V_0_load_A();
    void thread_inStream_V_dest_V_0_load_B();
    void thread_inStream_V_dest_V_0_sel();
    void thread_inStream_V_dest_V_0_state_cmp_full();
    void thread_inStream_V_dest_V_0_vld_in();
    void thread_inStream_V_dest_V_0_vld_out();
    void thread_inStream_V_id_V_0_ack_in();
    void thread_inStream_V_id_V_0_ack_out();
    void thread_inStream_V_id_V_0_data_out();
    void thread_inStream_V_id_V_0_load_A();
    void thread_inStream_V_id_V_0_load_B();
    void thread_inStream_V_id_V_0_sel();
    void thread_inStream_V_id_V_0_state_cmp_full();
    void thread_inStream_V_id_V_0_vld_in();
    void thread_inStream_V_id_V_0_vld_out();
    void thread_inStream_V_keep_V_0_ack_in();
    void thread_inStream_V_keep_V_0_ack_out();
    void thread_inStream_V_keep_V_0_data_out();
    void thread_inStream_V_keep_V_0_load_A();
    void thread_inStream_V_keep_V_0_load_B();
    void thread_inStream_V_keep_V_0_sel();
    void thread_inStream_V_keep_V_0_state_cmp_full();
    void thread_inStream_V_keep_V_0_vld_in();
    void thread_inStream_V_keep_V_0_vld_out();
    void thread_inStream_V_strb_V_0_ack_in();
    void thread_inStream_V_strb_V_0_ack_out();
    void thread_inStream_V_strb_V_0_data_out();
    void thread_inStream_V_strb_V_0_load_A();
    void thread_inStream_V_strb_V_0_load_B();
    void thread_inStream_V_strb_V_0_sel();
    void thread_inStream_V_strb_V_0_state_cmp_full();
    void thread_inStream_V_strb_V_0_vld_in();
    void thread_inStream_V_strb_V_0_vld_out();
    void thread_inStream_V_user_V_0_ack_in();
    void thread_inStream_V_user_V_0_ack_out();
    void thread_inStream_V_user_V_0_data_out();
    void thread_inStream_V_user_V_0_load_A();
    void thread_inStream_V_user_V_0_load_B();
    void thread_inStream_V_user_V_0_sel();
    void thread_inStream_V_user_V_0_state_cmp_full();
    void thread_inStream_V_user_V_0_vld_in();
    void thread_inStream_V_user_V_0_vld_out();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_lineBuff_val_0_address0();
    void thread_lineBuff_val_0_address1();
    void thread_lineBuff_val_0_ce0();
    void thread_lineBuff_val_0_ce1();
    void thread_lineBuff_val_0_we0();
    void thread_lineBuff_val_1_address0();
    void thread_lineBuff_val_1_address1();
    void thread_lineBuff_val_1_ce0();
    void thread_lineBuff_val_1_ce1();
    void thread_lineBuff_val_1_we0();
    void thread_lineBuff_val_2_address0();
    void thread_lineBuff_val_2_address1();
    void thread_lineBuff_val_2_ce0();
    void thread_lineBuff_val_2_ce1();
    void thread_lineBuff_val_2_we0();
    void thread_or_cond_fu_705_p2();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_outStream_V_data_V_1_ack_in();
    void thread_outStream_V_data_V_1_ack_out();
    void thread_outStream_V_data_V_1_data_in();
    void thread_outStream_V_data_V_1_data_out();
    void thread_outStream_V_data_V_1_load_A();
    void thread_outStream_V_data_V_1_load_B();
    void thread_outStream_V_data_V_1_sel();
    void thread_outStream_V_data_V_1_state_cmp_full();
    void thread_outStream_V_data_V_1_vld_in();
    void thread_outStream_V_data_V_1_vld_out();
    void thread_outStream_V_dest_V_1_ack_in();
    void thread_outStream_V_dest_V_1_ack_out();
    void thread_outStream_V_dest_V_1_data_in();
    void thread_outStream_V_dest_V_1_data_out();
    void thread_outStream_V_dest_V_1_load_A();
    void thread_outStream_V_dest_V_1_load_B();
    void thread_outStream_V_dest_V_1_sel();
    void thread_outStream_V_dest_V_1_state_cmp_full();
    void thread_outStream_V_dest_V_1_vld_in();
    void thread_outStream_V_dest_V_1_vld_out();
    void thread_outStream_V_id_V_1_ack_in();
    void thread_outStream_V_id_V_1_ack_out();
    void thread_outStream_V_id_V_1_data_in();
    void thread_outStream_V_id_V_1_data_out();
    void thread_outStream_V_id_V_1_load_A();
    void thread_outStream_V_id_V_1_load_B();
    void thread_outStream_V_id_V_1_sel();
    void thread_outStream_V_id_V_1_state_cmp_full();
    void thread_outStream_V_id_V_1_vld_in();
    void thread_outStream_V_id_V_1_vld_out();
    void thread_outStream_V_keep_V_1_ack_in();
    void thread_outStream_V_keep_V_1_ack_out();
    void thread_outStream_V_keep_V_1_data_in();
    void thread_outStream_V_keep_V_1_data_out();
    void thread_outStream_V_keep_V_1_load_A();
    void thread_outStream_V_keep_V_1_load_B();
    void thread_outStream_V_keep_V_1_sel();
    void thread_outStream_V_keep_V_1_state_cmp_full();
    void thread_outStream_V_keep_V_1_vld_in();
    void thread_outStream_V_keep_V_1_vld_out();
    void thread_outStream_V_last_V_1_ack_in();
    void thread_outStream_V_last_V_1_ack_out();
    void thread_outStream_V_last_V_1_data_in();
    void thread_outStream_V_last_V_1_data_out();
    void thread_outStream_V_last_V_1_load_A();
    void thread_outStream_V_last_V_1_load_B();
    void thread_outStream_V_last_V_1_sel();
    void thread_outStream_V_last_V_1_state_cmp_full();
    void thread_outStream_V_last_V_1_vld_in();
    void thread_outStream_V_last_V_1_vld_out();
    void thread_outStream_V_strb_V_1_ack_in();
    void thread_outStream_V_strb_V_1_ack_out();
    void thread_outStream_V_strb_V_1_data_in();
    void thread_outStream_V_strb_V_1_data_out();
    void thread_outStream_V_strb_V_1_load_A();
    void thread_outStream_V_strb_V_1_load_B();
    void thread_outStream_V_strb_V_1_sel();
    void thread_outStream_V_strb_V_1_state_cmp_full();
    void thread_outStream_V_strb_V_1_vld_in();
    void thread_outStream_V_strb_V_1_vld_out();
    void thread_outStream_V_user_V_1_ack_in();
    void thread_outStream_V_user_V_1_ack_out();
    void thread_outStream_V_user_V_1_data_in();
    void thread_outStream_V_user_V_1_data_out();
    void thread_outStream_V_user_V_1_load_A();
    void thread_outStream_V_user_V_1_load_B();
    void thread_outStream_V_user_V_1_sel();
    void thread_outStream_V_user_V_1_state_cmp_full();
    void thread_outStream_V_user_V_1_vld_in();
    void thread_outStream_V_user_V_1_vld_out();
    void thread_p_neg_fu_1163_p2();
    void thread_p_s_fu_1237_p3();
    void thread_phitmp_fu_948_p2();
    void thread_pixConvolved_1_fu_1055_p3();
    void thread_pixConvolved_2_fu_1062_p3();
    void thread_pixConvolved_3_fu_615_p2();
    void thread_sel_tmp10_fu_1135_p3();
    void thread_sel_tmp1_fu_720_p3();
    void thread_sel_tmp2_fu_547_p2();
    void thread_sel_tmp3_fu_727_p2();
    void thread_sel_tmp4_fu_732_p3();
    void thread_sel_tmp5_fu_553_p2();
    void thread_sel_tmp6_fu_1041_p2();
    void thread_sel_tmp7_fu_1045_p3();
    void thread_sel_tmp8_fu_559_p2();
    void thread_sel_tmp9_fu_1051_p2();
    void thread_sel_tmp_fu_1128_p3();
    void thread_tmp1_fu_1008_p2();
    void thread_tmp2_fu_1081_p2();
    void thread_tmp3_fu_1085_p2();
    void thread_tmp4_fu_711_p2();
    void thread_tmp5_fu_1090_p2();
    void thread_tmp6_fu_1095_p2();
    void thread_tmp7_fu_1142_p2();
    void thread_tmp_10_cast_fu_1214_p1();
    void thread_tmp_10_fu_1225_p1();
    void thread_tmp_11_0_1_i_fu_781_p2();
    void thread_tmp_11_0_2_i_fu_791_p2();
    void thread_tmp_11_1_1_i_fu_875_p2();
    void thread_tmp_11_1_2_i_fu_916_p2();
    void thread_tmp_11_1_i_fu_834_p2();
    void thread_tmp_11_2_1_i_fu_1029_p2();
    void thread_tmp_11_2_2_i_fu_1116_p2();
    void thread_tmp_11_2_i_fu_983_p2();
    void thread_tmp_11_fu_928_p2();
    void thread_tmp_12_fu_577_p2();
    void thread_tmp_13_fu_1229_p3();
    void thread_tmp_14_fu_655_p1();
    void thread_tmp_15_fu_716_p1();
    void thread_tmp_16_fu_763_p1();
    void thread_tmp_17_fu_818_p1();
    void thread_tmp_18_fu_859_p1();
    void thread_tmp_19_fu_900_p1();
    void thread_tmp_1_fu_673_p4();
    void thread_tmp_20_fu_967_p1();
    void thread_tmp_20_tr_fu_1151_p1();
    void thread_tmp_21_fu_1013_p1();
    void thread_tmp_22_fu_1100_p1();
    void thread_tmp_27_0_1_fu_621_p1();
    void thread_tmp_27_0_2_fu_648_p1();
    void thread_tmp_2_fu_689_p4();
    void thread_tmp_5_0_1_i_fu_753_p2();
    void thread_tmp_5_0_2_i_fu_767_p2();
    void thread_tmp_5_1_1_i_fu_863_p2();
    void thread_tmp_5_1_2_i_fu_904_p2();
    void thread_tmp_5_1_i_fu_822_p2();
    void thread_tmp_5_2_1_i_fu_1017_p2();
    void thread_tmp_5_2_2_i_fu_1104_p2();
    void thread_tmp_5_2_i_fu_971_p2();
    void thread_tmp_5_cast_fu_1202_p1();
    void thread_tmp_5_fu_608_p1();
    void thread_tmp_8_fu_1205_p1();
    void thread_tmp_9_fu_1208_p2();
    void thread_tmp_last_V_fu_1264_p2();
    void thread_tmp_s_fu_571_p1();
    void thread_valInWindow_0_maxVal_1_fu_797_p3();
    void thread_valInWindow_0_maxVal_2_fu_839_p3();
    void thread_valInWindow_0_maxVal_3_fu_880_p3();
    void thread_valInWindow_0_maxVal_4_fu_921_p3();
    void thread_valInWindow_0_maxVal_5_fu_988_p3();
    void thread_valInWindow_0_maxVal_6_fu_1034_p3();
    void thread_valInWindow_0_maxVal_7_fu_1121_p3();
    void thread_valInWindow_0_maxVal_fu_785_p3();
    void thread_valInWindow_0_minVal_1_fu_773_p3();
    void thread_valInWindow_0_minVal_2_fu_827_p3();
    void thread_valInWindow_0_minVal_3_fu_868_p3();
    void thread_valInWindow_0_minVal_4_fu_909_p3();
    void thread_valInWindow_0_minVal_5_fu_976_p3();
    void thread_valInWindow_0_minVal_6_fu_1022_p3();
    void thread_valInWindow_0_minVal_7_fu_1109_p3();
    void thread_valInWindow_0_minVal_fu_757_p3();
    void thread_valOutput_1_fu_1218_p3();
    void thread_valOutput_fu_1146_p2();
    void thread_window_val_0_0_fu_636_p0();
    void thread_window_val_0_0_fu_636_p1();
    void thread_window_val_0_0_fu_636_p10();
    void thread_window_val_0_0_fu_636_p2();
    void thread_window_val_0_1_fu_667_p0();
    void thread_window_val_0_1_fu_667_p1();
    void thread_window_val_0_1_fu_667_p10();
    void thread_window_val_0_1_fu_667_p2();
    void thread_window_val_0_2_fu_747_p0();
    void thread_window_val_0_2_fu_747_p1();
    void thread_window_val_0_2_fu_747_p10();
    void thread_window_val_0_2_fu_747_p2();
    void thread_window_val_1_0_fu_812_p0();
    void thread_window_val_1_0_fu_812_p1();
    void thread_window_val_1_0_fu_812_p10();
    void thread_window_val_1_0_fu_812_p2();
    void thread_window_val_1_1_fu_853_p0();
    void thread_window_val_1_1_fu_853_p1();
    void thread_window_val_1_1_fu_853_p10();
    void thread_window_val_1_1_fu_853_p2();
    void thread_window_val_1_2_fu_894_p0();
    void thread_window_val_1_2_fu_894_p1();
    void thread_window_val_1_2_fu_894_p10();
    void thread_window_val_1_2_fu_894_p2();
    void thread_window_val_2_0_fu_961_p0();
    void thread_window_val_2_0_fu_961_p1();
    void thread_window_val_2_0_fu_961_p10();
    void thread_window_val_2_0_fu_961_p2();
    void thread_window_val_2_1_fu_1002_p0();
    void thread_window_val_2_1_fu_1002_p1();
    void thread_window_val_2_1_fu_1002_p10();
    void thread_window_val_2_1_fu_1002_p2();
    void thread_window_val_2_2_fu_1075_p0();
    void thread_window_val_2_2_fu_1075_p1();
    void thread_window_val_2_2_fu_1075_p10();
    void thread_window_val_2_2_fu_1075_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
